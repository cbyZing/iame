<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.3.xsd                 http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <!-- @Controller注解的使用前提配置  详细解释见(注.txt 1. )-->
    <mvc:annotation-driven />
    <!-- 对module包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能-->
    <!-- 只扫描Controller,不扫描Service -->
    <!--  <context:annotation-config/>    用下面的取代-->
    <context:component-scan base-package="com.qd.*">
       <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean id="messageAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <!--jakson-->
        <property name="messageConverters">
            <list>
                <!-- Support JSON -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="exceptionMessageAdapter" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
        <property name="messageConverters">
            <list>
                <!-- Support JSON -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404
        加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容。-->
    <mvc:default-servlet-handler />

    <!-- 定义视图解析器，在视图模型前后添加前缀后缀 暂时只支持jsp后缀-->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/views/" />&lt;!&ndash; 路径前缀 &ndash;&gt;-->
        <!--<property name="suffix" value=".jsp" />&lt;!&ndash; 后缀 &ndash;&gt;-->
    <!--</bean>-->

    <!-- FreeMarker视图解析器  默认-->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/views/"/>
    </bean>
    <bean id="viewResolverFree" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="cache" value="true"/>
        <property name="viewNames" value="*.html" />
        <property name="suffix" value=""/>
        <property name="order" value="0"/>
    </bean>

    <!-- JSP视图解析器  -->
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="viewNames" value="*.jsp" />
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>





    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000" />
    </bean>


    <!--静态资源文件 -->
    <mvc:resources mapping="/statics/**" location="/statics/"/>
    <!--<mvc:resources location="/views/" mapping="/**/*.html"/>-->
    <mvc:resources location="/views" mapping="/**/*.js"/>
    <mvc:resources location="/views" mapping="/**/*.css"/>
    <mvc:resources location="/views" mapping="/**/*.png"/>
    <mvc:resources location="/views" mapping="/**/*.gif"/>



</beans>